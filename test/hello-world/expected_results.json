{"message":null,"status":"fail","tests":[{"message":null,"name":"test says 'Hello, World!'","output":"Hello, sdtout!","status":"pass","task_id":1,"test_code":"assert HelloWorld.hello() == \"Hello, World!\""},{"message":"  1) test says 'Bye, World!' (HelloWorldTest)\n     \u001B[1m\u001B[30mtest/hello_world_test.exs:10\u001B[0m\n     \u001B[31mAssertion with == failed\u001B[0m\n     \u001B[36mcode:  \u001B[0massert HelloWorld.bye() == \"Bye, World!\"\n     \u001B[36mleft:  \u001B[0m\u001B[31mnil\u001B[0m\n     \u001B[36mright: \u001B[0m\u001B[32m\"Bye, World!\"\u001B[0m\n     \u001B[36mstacktrace:\u001B[0m\n       test/hello_world_test.exs:12: (test)\n","name":"test says 'Bye, World!'","output":"Bye, sdtout!","status":"fail","task_id":1,"test_code":"assert HelloWorld.bye() == \"Bye, World!\""},{"message":null,"name":"test test in describe says 'Hello, World!' in describe","output":"Hello, sdtout!","status":"pass","task_id":1,"test_code":"assert HelloWorld.hello() == \"Hello, World!\""},{"message":"  2) test test in describe says 'Bye, World!' in describe (HelloWorldTest)\n     \u001B[1m\u001B[30mtest/hello_world_test.exs:23\u001B[0m\n     \u001B[31mAssertion with == failed\u001B[0m\n     \u001B[36mcode:  \u001B[0massert HelloWorld.bye() == \"Bye, World!\"\n     \u001B[36mleft:  \u001B[0m\u001B[31mnil\u001B[0m\n     \u001B[36mright: \u001B[0m\u001B[32m\"Bye, World!\"\u001B[0m\n     \u001B[36mstacktrace:\u001B[0m\n       test/hello_world_test.exs:25: (test)\n","name":"test test in describe says 'Bye, World!' in describe","output":"Bye, sdtout!","status":"fail","task_id":1,"test_code":"assert HelloWorld.bye() == \"Bye, World!\""},{"message":"  3) test failing test (HelloWorldTest)\n     \u001B[1m\u001B[30mtest/hello_world_test.exs:30\u001B[0m\n     \u001B[31mAssertion with == failed\u001B[0m\n     \u001B[36mcode:  \u001B[0massert [1, 2, 3] == [2, 3]\n     \u001B[36mleft:  \u001B[0m[\u001B[31m1\u001B[0m, 2, 3]\n     \u001B[36mright: \u001B[0m[2, 3]\n     \u001B[36mstacktrace:\u001B[0m\n       test/hello_world_test.exs:32: (test)\n","name":"test failing test","output":"","status":"fail","task_id":2,"test_code":"assert [1, 2, 3] == [2, 3]"}],"version":3}
