{"message":null,"status":"pass","tests":[{"message":null,"name":"test print_race prints a race with no cars","output":"","status":"pass","task_id":null,"test_code":"race = %NeedForSpeed.Race{title: \"Need For Speed 2021\", total_distance_in_meters: 350, cars: []}\nio = capture_io(fn -> NeedForSpeed.print_race(race) end)\n\nassert io ==\n         \"🏁 Need For Speed 2021 🏁\\nStatus: Not Started\\nDistance: 350 meters\\n\\nContestants:\\n\\n\""},{"message":null,"name":"test print_race prints a race with a red car","output":"","status":"pass","task_id":null,"test_code":"car = NeedForSpeed.RemoteControlCar.new(:red, \"The Fox\")\n\nrace = %NeedForSpeed.Race{\n  title: \"Need For Speed 2021\",\n  total_distance_in_meters: 500,\n  cars: [car]\n}\n\nio = capture_io(fn -> NeedForSpeed.print_race(race) end)\nassert io == \"🏁 Need For Speed 2021 🏁\nStatus: Not Started\nDistance: 500 meters\n\nContestants:\n\n  1. #{IO.ANSI.red()}The Fox#{IO.ANSI.default_color()}\n  Distance: 0 meters\n  Battery: Battery at 100%\n\n\""},{"message":null,"name":"test print_race prints a race with a blue car","output":"","status":"pass","task_id":null,"test_code":"car = NeedForSpeed.RemoteControlCar.new(:blue, \"The Hurricane\")\n\nrace = %NeedForSpeed.Race{\n  title: \"Need For Speed 2021\",\n  total_distance_in_meters: 500,\n  cars: [car]\n}\n\nio = capture_io(fn -> NeedForSpeed.print_race(race) end)\nassert io == \"🏁 Need For Speed 2021 🏁\nStatus: Not Started\nDistance: 500 meters\n\nContestants:\n\n  1. #{IO.ANSI.cyan()}The Hurricane#{IO.ANSI.default_color()}\n  Distance: 0 meters\n  Battery: Battery at 100%\n\n\""},{"message":null,"name":"test print_race prints a race with a green car","output":"","status":"pass","task_id":null,"test_code":"car = NeedForSpeed.RemoteControlCar.new(:green, \"The Grasshopper\")\n\nrace = %NeedForSpeed.Race{\n  title: \"Need For Speed 2021\",\n  total_distance_in_meters: 777,\n  cars: [car]\n}\n\nio = capture_io(fn -> NeedForSpeed.print_race(race) end)\nassert io == \"🏁 Need For Speed 2021 🏁\nStatus: Not Started\nDistance: 777 meters\n\nContestants:\n\n  1. #{IO.ANSI.green()}The Grasshopper#{IO.ANSI.default_color()}\n  Distance: 0 meters\n  Battery: Battery at 100%\n\n\""},{"message":null,"name":"test print_race prints a race in progress with many cars","output":"","status":"pass","task_id":null,"test_code":"red_car = NeedForSpeed.RemoteControlCar.new(:red, \"The Fox\")\nblue_car = NeedForSpeed.RemoteControlCar.new(:blue, \"The Hurricane\")\ngreen_car = NeedForSpeed.RemoteControlCar.new(:green, \"The Grasshopper\")\nred_car = %{red_car | distance_driven_in_meters: 305, battery_percentage: 70}\nblue_car = %{blue_car | distance_driven_in_meters: 500, battery_percentage: 62}\ngreen_car = %{green_car | distance_driven_in_meters: 235, battery_percentage: 60}\n\nrace = %NeedForSpeed.Race{\n  title: \"Need For Speed 2021\",\n  total_distance_in_meters: 1000,\n  cars: [red_car, blue_car, green_car]\n}\n\nio = capture_io(fn -> NeedForSpeed.print_race(race) end)\nassert io == \"🏁 Need For Speed 2021 🏁\nStatus: In Progress\nDistance: 1000 meters\n\nContestants:\n\n  1. #{IO.ANSI.cyan()}The Hurricane#{IO.ANSI.default_color()}\n  Distance: 500 meters\n  Battery: Battery at 62%\n\n  2. #{IO.ANSI.red()}The Fox#{IO.ANSI.default_color()}\n  Distance: 305 meters\n  Battery: Battery at 70%\n\n  3. #{IO.ANSI.green()}The Grasshopper#{IO.ANSI.default_color()}\n  Distance: 235 meters\n  Battery: Battery at 60%\n\n\""}],"version":3}
