{"message":null,"status":"pass","tests":[{"message":null,"name":"test sum","output":"","status":"pass","task_id":null,"test_code":"triplet = [3, 4, 5]\nassert Triplet.sum(triplet) == 12"},{"message":null,"name":"test product","output":"","status":"pass","task_id":null,"test_code":"triplet = [3, 4, 5]\nassert Triplet.product(triplet) == 60"},{"message":null,"name":"test pythagorean","output":"","status":"pass","task_id":null,"test_code":"triplet = [3, 4, 5]\nassert Triplet.pythagorean?(triplet)"},{"message":null,"name":"test not pythagorean","output":"","status":"pass","task_id":null,"test_code":"triplet = [5, 6, 7]\nrefute Triplet.pythagorean?(triplet)"},{"message":null,"name":"test triplets whose sum is 12","output":"","status":"pass","task_id":null,"test_code":"assert Triplet.generate(12) == [[3, 4, 5]]"},{"message":null,"name":"test triplets whose sum is 108","output":"","status":"pass","task_id":null,"test_code":"assert Triplet.generate(108) == [~c\"\\e$-\"]"},{"message":null,"name":"test triplets whose sum is 1000","output":"","status":"pass","task_id":null,"test_code":"assert Triplet.generate(1000) == [[200, 375, 425]]"},{"message":null,"name":"test no matching triplets for 1001","output":"","status":"pass","task_id":null,"test_code":"assert Triplet.generate(1001) == []"},{"message":null,"name":"test returns all matching triplets","output":"","status":"pass","task_id":null,"test_code":"assert Triplet.generate(90) == [~c\"\\t()\", [15, 36, 39]]"},{"message":null,"name":"test several matching triplets","output":"","status":"pass","task_id":null,"test_code":"assert Triplet.generate(840) == [\n         [40, 399, 401],\n         [56, 390, 394],\n         [105, 360, 375],\n         [120, 350, 370],\n         [140, 336, 364],\n         [168, 315, 357],\n         [210, 280, 350],\n         [240, 252, 348]\n       ]"}],"version":3}
